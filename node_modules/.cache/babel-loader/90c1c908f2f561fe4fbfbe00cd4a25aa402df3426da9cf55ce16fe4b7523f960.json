{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nexport const useConversations = () => {\n  _s();\n  const [conversations, setConversations] = useLocalStorage('conversations', {});\n  const [activeConversationId, setActiveConversationId] = useState(null);\n  useEffect(() => {\n    const conversationKeys = Object.keys(conversations);\n    if (conversationKeys.length === 0) {\n      createNewConversation();\n    } else if (!activeConversationId || !conversations[activeConversationId]) {\n      // Set the most recent conversation as active\n      setActiveConversationId(conversationKeys.sort().reverse()[0]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const createNewConversation = () => {\n    const newId = `conv_${Date.now()}`;\n    const newConversation = {\n      id: newId,\n      title: \"New Conversation\",\n      messages: [{\n        sender: 'bot',\n        text: 'Hello! I am your Fashion Insights AI. Ask me about sales, inventory, or revenue forecasts.',\n        type: 'text'\n      }]\n    };\n    setConversations(prev => ({\n      ...prev,\n      [newId]: newConversation\n    }));\n    setActiveConversationId(newId);\n  };\n  const addMessageToConversation = (convId, message) => {\n    setConversations(prev => {\n      const newConversations = {\n        ...prev\n      };\n      if (newConversations[convId]) {\n        newConversations[convId].messages.push(message);\n      }\n      return newConversations;\n    });\n  };\n  const updateConversationTitle = (convId, title) => {\n    setConversations(prev => {\n      const newConversations = {\n        ...prev\n      };\n      if (newConversations[convId]) {\n        newConversations[convId].title = title.substring(0, 50); // Truncate title\n      }\n      return newConversations;\n    });\n  };\n  return {\n    conversations,\n    activeConversationId,\n    setActiveConversationId,\n    createNewConversation,\n    addMessageToConversation,\n    updateConversationTitle\n  };\n};\n_s(useConversations, \"rzF9N77Fnhz6LMLGQDybowyhlDc=\", false, function () {\n  return [useLocalStorage];\n});","map":{"version":3,"names":["useState","useEffect","useLocalStorage","useConversations","_s","conversations","setConversations","activeConversationId","setActiveConversationId","conversationKeys","Object","keys","length","createNewConversation","sort","reverse","newId","Date","now","newConversation","id","title","messages","sender","text","type","prev","addMessageToConversation","convId","message","newConversations","push","updateConversationTitle","substring"],"sources":["/Users/trentino/Work/OFM/droplet/ofm_chatbot/frontend/src/hooks/useConversations.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nexport const useConversations = () => {\n    const [conversations, setConversations] = useLocalStorage('conversations', {});\n    const [activeConversationId, setActiveConversationId] = useState(null);\n\n    useEffect(() => {\n        const conversationKeys = Object.keys(conversations);\n        if (conversationKeys.length === 0) {\n            createNewConversation();\n        } else if (!activeConversationId || !conversations[activeConversationId]) {\n            // Set the most recent conversation as active\n            setActiveConversationId(conversationKeys.sort().reverse()[0]);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const createNewConversation = () => {\n        const newId = `conv_${Date.now()}`;\n        const newConversation = {\n            id: newId,\n            title: \"New Conversation\",\n            messages: [{\n                sender: 'bot',\n                text: 'Hello! I am your Fashion Insights AI. Ask me about sales, inventory, or revenue forecasts.',\n                type: 'text'\n            }]\n        };\n        setConversations(prev => ({ ...prev, [newId]: newConversation }));\n        setActiveConversationId(newId);\n    };\n\n    const addMessageToConversation = (convId, message) => {\n        setConversations(prev => {\n            const newConversations = { ...prev };\n            if (newConversations[convId]) {\n                newConversations[convId].messages.push(message);\n            }\n            return newConversations;\n        });\n    };\n\n    const updateConversationTitle = (convId, title) => {\n        setConversations(prev => {\n            const newConversations = { ...prev };\n            if (newConversations[convId]) {\n                newConversations[convId].title = title.substring(0, 50); // Truncate title\n            }\n            return newConversations;\n        });\n    };\n\n    return {\n        conversations,\n        activeConversationId,\n        setActiveConversationId,\n        createNewConversation,\n        addMessageToConversation,\n        updateConversationTitle\n    };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,eAAe,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;EAC9E,MAAM,CAACK,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACZ,MAAMQ,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACN,aAAa,CAAC;IACnD,IAAII,gBAAgB,CAACG,MAAM,KAAK,CAAC,EAAE;MAC/BC,qBAAqB,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAI,CAACN,oBAAoB,IAAI,CAACF,aAAa,CAACE,oBAAoB,CAAC,EAAE;MACtE;MACAC,uBAAuB,CAACC,gBAAgB,CAACK,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE;IACJ;EACA,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMG,KAAK,GAAG,QAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IAClC,MAAMC,eAAe,GAAG;MACpBC,EAAE,EAAEJ,KAAK;MACTK,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE,CAAC;QACPC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE,4FAA4F;QAClGC,IAAI,EAAE;MACV,CAAC;IACL,CAAC;IACDnB,gBAAgB,CAACoB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACV,KAAK,GAAGG;IAAgB,CAAC,CAAC,CAAC;IACjEX,uBAAuB,CAACQ,KAAK,CAAC;EAClC,CAAC;EAED,MAAMW,wBAAwB,GAAGA,CAACC,MAAM,EAAEC,OAAO,KAAK;IAClDvB,gBAAgB,CAACoB,IAAI,IAAI;MACrB,MAAMI,gBAAgB,GAAG;QAAE,GAAGJ;MAAK,CAAC;MACpC,IAAII,gBAAgB,CAACF,MAAM,CAAC,EAAE;QAC1BE,gBAAgB,CAACF,MAAM,CAAC,CAACN,QAAQ,CAACS,IAAI,CAACF,OAAO,CAAC;MACnD;MACA,OAAOC,gBAAgB;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAACJ,MAAM,EAAEP,KAAK,KAAK;IAC/Cf,gBAAgB,CAACoB,IAAI,IAAI;MACrB,MAAMI,gBAAgB,GAAG;QAAE,GAAGJ;MAAK,CAAC;MACpC,IAAII,gBAAgB,CAACF,MAAM,CAAC,EAAE;QAC1BE,gBAAgB,CAACF,MAAM,CAAC,CAACP,KAAK,GAAGA,KAAK,CAACY,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC7D;MACA,OAAOH,gBAAgB;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHzB,aAAa;IACbE,oBAAoB;IACpBC,uBAAuB;IACvBK,qBAAqB;IACrBc,wBAAwB;IACxBK;EACJ,CAAC;AACL,CAAC;AAAC5B,EAAA,CA1DWD,gBAAgB;EAAA,QACiBD,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}