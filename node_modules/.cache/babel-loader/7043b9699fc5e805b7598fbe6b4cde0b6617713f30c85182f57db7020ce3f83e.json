{"ast":null,"code":"var _jsxFileName = \"/Users/trentino/Work/OFM/droplet/ofm_chatbot/frontend/src/components/ChatInterface.jsx\",\n  _s = $RefreshSig$();\n// /frontend/src/components/ChatInterface.jsx\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useConversations } from '../hooks/useConversations';\nimport ChatMessage from './ChatMessage';\nimport WelcomeScreen from './WelcomeScreen';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  const {\n    conversations,\n    activeConversationId,\n    setActiveConversationId,\n    createNewConversation,\n    addMessageToConversation,\n    updateConversationFile\n  } = useConversations();\n\n  // This state will hold the actual File object in memory for the current session.\n  const [activeFile, setActiveFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const chatEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const activeConversation = conversations[activeConversationId];\n  const messages = (activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation.messages) || [];\n  useEffect(() => {\n    // When switching conversations, reset the active file.\n    setActiveFile(null);\n  }, [activeConversationId]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, isLoading]);\n  const handleFileChange = file => {\n    if (file) {\n      // Always create a new conversation when a new file is uploaded.\n      // This simplifies the logic and prevents state confusion.\n      const newConvId = createNewConversation(`Analysis of ${file.name}`);\n      updateConversationFile(newConvId, file.name); // Store file NAME only\n      setActiveFile(file); // Keep the actual file object in state for this session\n    }\n  };\n  const handleSendMessage = async input => {\n    if (!input.trim() || isLoading) return;\n\n    // If there's no file associated with the conversation OR if the file isn't in memory,\n    // prompt the user to upload it. This is the most robust way to handle it.\n    if (!activeFile) {\n      fileInputRef.current.click();\n      return;\n    }\n    addMessageToConversation(activeConversationId, {\n      sender: 'user',\n      text: input,\n      type: 'text'\n    });\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', activeFile);\n    formData.append('query', input);\n    formData.append('conversation_id', activeConversationId);\n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const err = await response.json();\n        throw new Error(err.detail || `HTTP error!`);\n      }\n      const botResponse = await response.json();\n      addMessageToConversation(activeConversationId, botResponse);\n    } catch (error) {\n      addMessageToConversation(activeConversationId, {\n        sender: 'bot',\n        text: `Sorry, an error occurred: ${error.message}.`,\n        type: 'text'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex h-screen bg-white dark:bg-gray-950 text-gray-800 dark:text-gray-200 font-sans antialiased`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file-upload\",\n      type: \"file\",\n      className: \"hidden\",\n      onChange: e => handleFileChange(e.target.files[0]),\n      accept: \".csv,.parquet\",\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: isHistoryOpen,\n      setIsOpen: setIsHistoryOpen,\n      conversations: conversations,\n      activeConversationId: activeConversationId,\n      setActiveConversationId: setActiveConversationId,\n      createNewConversation: createNewConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex flex-col items-center relative\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation.title,\n        fileName: activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation.fileName,\n        onHistoryClick: () => setIsHistoryOpen(true),\n        onThemeToggle: toggleTheme,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full max-w-4xl overflow-y-auto px-4 pb-24 pt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-8\",\n          children: [activeConversation ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            msg: msg\n          }, msg.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 64\n          }, this)) : /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n            onUploadClick: () => fileInputRef.current.click()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 115\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(ChatMessage.Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage,\n        isLoading: isLoading\n        // The input is enabled as long as a conversation exists.\n        // The send handler will prompt for a file if needed.\n        ,\n        hasFileAssociated: !!(activeConversation !== null && activeConversation !== void 0 && activeConversation.fileName),\n        onUploadClick: () => fileInputRef.current.click()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"4NeTbZc6raI8xGKAzfshsX4QygY=\", false, function () {\n  return [useTheme, useConversations];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useTheme","useConversations","ChatMessage","WelcomeScreen","Sidebar","Header","MessageInput","jsxDEV","_jsxDEV","ChatInterface","_s","theme","toggleTheme","conversations","activeConversationId","setActiveConversationId","createNewConversation","addMessageToConversation","updateConversationFile","activeFile","setActiveFile","isLoading","setIsLoading","isHistoryOpen","setIsHistoryOpen","chatEndRef","fileInputRef","activeConversation","messages","_chatEndRef$current","current","scrollIntoView","behavior","handleFileChange","file","newConvId","name","handleSendMessage","input","trim","click","sender","text","type","formData","FormData","append","response","fetch","method","body","ok","err","json","Error","detail","botResponse","error","message","className","children","id","onChange","e","target","files","accept","ref","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","setIsOpen","title","onHistoryClick","onThemeToggle","map","msg","index","onUploadClick","Loading","onSendMessage","hasFileAssociated","_c","$RefreshReg$"],"sources":["/Users/trentino/Work/OFM/droplet/ofm_chatbot/frontend/src/components/ChatInterface.jsx"],"sourcesContent":["// /frontend/src/components/ChatInterface.jsx\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useConversations } from '../hooks/useConversations';\nimport ChatMessage from './ChatMessage';\nimport WelcomeScreen from './WelcomeScreen';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport MessageInput from './MessageInput';\n\nconst ChatInterface = () => {\n  const { theme, toggleTheme } = useTheme();\n  const { \n    conversations, \n    activeConversationId, \n    setActiveConversationId, \n    createNewConversation,\n    addMessageToConversation,\n    updateConversationFile\n  } = useConversations();\n  \n  // This state will hold the actual File object in memory for the current session.\n  const [activeFile, setActiveFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const chatEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  const activeConversation = conversations[activeConversationId];\n  const messages = activeConversation?.messages || [];\n  \n  useEffect(() => {\n    // When switching conversations, reset the active file.\n    setActiveFile(null);\n  }, [activeConversationId]);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, isLoading]);\n\n  const handleFileChange = (file) => {\n    if (file) {\n      // Always create a new conversation when a new file is uploaded.\n      // This simplifies the logic and prevents state confusion.\n      const newConvId = createNewConversation(`Analysis of ${file.name}`);\n      updateConversationFile(newConvId, file.name); // Store file NAME only\n      setActiveFile(file); // Keep the actual file object in state for this session\n    }\n  };\n\n  const handleSendMessage = async (input) => {\n    if (!input.trim() || isLoading) return;\n\n    // If there's no file associated with the conversation OR if the file isn't in memory,\n    // prompt the user to upload it. This is the most robust way to handle it.\n    if (!activeFile) {\n        fileInputRef.current.click(); \n        return;\n    }\n\n    addMessageToConversation(activeConversationId, { sender: 'user', text: input, type: 'text' });\n    setIsLoading(true);\n    \n    const formData = new FormData();\n    formData.append('file', activeFile);\n    formData.append('query', input);\n    formData.append('conversation_id', activeConversationId);\n\n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const err = await response.json();\n        throw new Error(err.detail || `HTTP error!`);\n      }\n\n      const botResponse = await response.json();\n      addMessageToConversation(activeConversationId, botResponse);\n\n    } catch (error) {\n      addMessageToConversation(activeConversationId, { sender: 'bot', text: `Sorry, an error occurred: ${error.message}.`, type: 'text' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={`flex h-screen bg-white dark:bg-gray-950 text-gray-800 dark:text-gray-200 font-sans antialiased`}>\n      <input \n        id=\"file-upload\" \n        type=\"file\" \n        className=\"hidden\" \n        onChange={(e) => handleFileChange(e.target.files[0])} \n        accept=\".csv,.parquet\"\n        ref={fileInputRef}\n      />\n      <Sidebar \n        isOpen={isHistoryOpen}\n        setIsOpen={setIsHistoryOpen}\n        conversations={conversations}\n        activeConversationId={activeConversationId}\n        setActiveConversationId={setActiveConversationId}\n        createNewConversation={createNewConversation}\n      />\n      <main className=\"flex-1 flex flex-col items-center relative\">\n        <Header \n          title={activeConversation?.title}\n          fileName={activeConversation?.fileName}\n          onHistoryClick={() => setIsHistoryOpen(true)}\n          onThemeToggle={toggleTheme}\n          theme={theme}\n        />\n        <div className=\"flex-1 w-full max-w-4xl overflow-y-auto px-4 pb-24 pt-8\">\n          <div className=\"flex flex-col space-y-8\">\n            {activeConversation ? messages.map((msg, index) => <ChatMessage key={msg.id || index} msg={msg} />) : <WelcomeScreen onUploadClick={() => fileInputRef.current.click()} />}\n            {isLoading && <ChatMessage.Loading />}\n            <div ref={chatEndRef} />\n          </div>\n        </div>\n        <MessageInput \n            onSendMessage={handleSendMessage} \n            isLoading={isLoading} \n            // The input is enabled as long as a conversation exists.\n            // The send handler will prompt for a file if needed.\n            hasFileAssociated={!!activeConversation?.fileName}\n            onUploadClick={() => fileInputRef.current.click()} \n        />\n      </main>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}